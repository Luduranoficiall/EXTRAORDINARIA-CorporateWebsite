{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./index.css';import BotGPTLanding from'./BotGPTLanding';import{jsx as _jsx}from\"react/jsx-runtime\";const App=()=>{const[message,setMessage]=useState('Carregando...');useEffect(()=>{// Use variável de ambiente REACT_APP_BACKEND_URL quando disponível\nconst backendUrl=typeof globalThis.process!=='undefined'&&globalThis.process.env&&globalThis.process.env.REACT_APP_BACKEND_URL?globalThis.process.env.REACT_APP_BACKEND_URL:'http://127.0.0.1:5000';const checkBackend=async()=>{try{var _data$message;const res=await fetch(\"\".concat(backendUrl,\"/api/test\"));if(!res.ok)throw new Error(\"Status \".concat(res.status));const data=await res.json();setMessage((_data$message=data.message)!==null&&_data$message!==void 0?_data$message:'Conectado ao backend');}catch(err){var _err$message;setMessage('Erro: '+((_err$message=err.message)!==null&&_err$message!==void 0?_err$message:String(err)));}};checkBackend();},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"app-root\",children:/*#__PURE__*/_jsx(BotGPTLanding,{})});};export default App;","map":{"version":3,"names":["React","useEffect","useState","BotGPTLanding","jsx","_jsx","App","message","setMessage","backendUrl","globalThis","process","env","REACT_APP_BACKEND_URL","checkBackend","_data$message","res","fetch","concat","ok","Error","status","data","json","err","_err$message","String","className","children"],"sources":["C:/Users/User/OneDrive/Documentos/Extraordinaria.ai/extraordinaria_site/react_frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './index.css';\r\nimport BotGPTLanding from './BotGPTLanding';\r\n\r\nconst App: React.FC = () => {\r\n  const [message, setMessage] = useState<string>('Carregando...');\r\n\r\n  useEffect(() => {\r\n    // Use variável de ambiente REACT_APP_BACKEND_URL quando disponível\r\n    const backendUrl = (typeof (globalThis as any).process !== 'undefined' && (globalThis as any).process.env && (globalThis as any).process.env.REACT_APP_BACKEND_URL) ? (globalThis as any).process.env.REACT_APP_BACKEND_URL : 'http://127.0.0.1:5000';\r\n\r\n    const checkBackend = async () => {\r\n      try {\r\n        const res = await fetch(`${backendUrl}/api/test`);\r\n        if (!res.ok) throw new Error(`Status ${res.status}`);\r\n        const data = await res.json();\r\n        setMessage(data.message ?? 'Conectado ao backend');\r\n      } catch (err: any) {\r\n        setMessage('Erro: ' + (err.message ?? String(err)));\r\n      }\r\n    };\r\n\r\n    checkBackend();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app-root\">\r\n      <BotGPTLanding />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,aAAa,CACpB,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGN,QAAQ,CAAS,eAAe,CAAC,CAE/DD,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAQ,UAAU,CAAI,MAAQ,CAAAC,UAAU,CAASC,OAAO,GAAK,WAAW,EAAKD,UAAU,CAASC,OAAO,CAACC,GAAG,EAAKF,UAAU,CAASC,OAAO,CAACC,GAAG,CAACC,qBAAqB,CAAKH,UAAU,CAASC,OAAO,CAACC,GAAG,CAACC,qBAAqB,CAAG,uBAAuB,CAErP,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,KAAAC,aAAA,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIT,UAAU,aAAW,CAAC,CACjD,GAAI,CAACO,GAAG,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,WAAAF,MAAA,CAAWF,GAAG,CAACK,MAAM,CAAE,CAAC,CACpD,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,GAAG,CAACO,IAAI,CAAC,CAAC,CAC7Bf,UAAU,EAAAO,aAAA,CAACO,IAAI,CAACf,OAAO,UAAAQ,aAAA,UAAAA,aAAA,CAAI,sBAAsB,CAAC,CACpD,CAAE,MAAOS,GAAQ,CAAE,KAAAC,YAAA,CACjBjB,UAAU,CAAC,QAAQ,GAAAiB,YAAA,CAAID,GAAG,CAACjB,OAAO,UAAAkB,YAAA,UAAAA,YAAA,CAAIC,MAAM,CAACF,GAAG,CAAC,CAAC,CAAC,CACrD,CACF,CAAC,CAEDV,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACET,IAAA,QAAKsB,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBvB,IAAA,CAACF,aAAa,GAAE,CAAC,CACd,CAAC,CAEV,CAAC,CAED,cAAe,CAAAG,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}